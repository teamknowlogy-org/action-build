name: 'BuildApp'
description: 'Get all the paraters by Name of the repository'
inputs:
  PROJECT_NAME: 
    description: 'Name of the Project  to build the app '
    required: true
    default: 'squint'
  APP_BRANCH_NAME: 
    description: 'Name of the Environment to build the app'
    required: true
    default: 'develop'    
  APPLICATION_NAME: 
    description: 'Name of the Application/Repository  to build the app '
    required: true
    default: 'squint-front' 
  APPLICATION_TYPE: 
    description: 'Type of the Application/Repository  to build the app '
    required: true
    default: 'angular' 
  
runs:
  using: "composite"
  steps:

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14.x'
      if: ${{env.APPLICATION_TYPE}} == 'angular'

    - name: Install application
      run: |
        npm i
      shell: bash
    - name: Build and package application
      run: |
        npm run build:${{env.APP_BRANCH_NAME}}
      shell: bash
      if: ${{env.APPLICATION_TYPE}} == 'angular'

    - name: Deploy to S3
      run: |
        cd output/dist
        aws s3 sync . s3://$( aws ssm get-parameter --region us-east-1 --name /${{env.PROJECT_NAME}}/${{env.APP_BRANCH_NAME}}/servicio/${{env.APPLICATION_NAME}}/S3_BUCKET_NAME  --query "Parameter.Value" --output text
 ) --delete
        ls -lrt
      shell: bash
      if: ${{env.APPLICATION_TYPE}} == 'angular'


    - name: Invalidate CloudFront cache
      run: |
        aws cloudfront create-invalidation --distribution-id $( aws ssm get-parameter --region us-east-1 --name /${{env.PROJECT_NAME}}/${{env.APP_BRANCH_NAME}}/servicio/${{env.APPLICATION_NAME}}/CLOUDFRONT_ID  --query "Parameter.Value" --output text
 ) --paths "/*"
      shell: bash
      if: ${{env.APPLICATION_TYPE}} == 'angular'


